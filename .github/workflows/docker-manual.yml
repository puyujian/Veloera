name: Manual Docker Build

on:
  # 提交时自动触发
  push:
    branches:
      - main
  # 支持手动触发（可选参数）
  workflow_dispatch:
    inputs:
      tag:
        description: '镜像标签 (默认为 latest)'
        required: false
        default: 'latest'
        type: string
      registry:
        description: '镜像仓库'
        required: false
        default: 'ghcr.io'
        type: choice
        options:
        - ghcr.io
        - docker.io
      push_to_registry:
        description: '是否推送到镜像仓库'
        required: false
        default: true
        type: boolean
      platforms:
        description: '构建平台'
        required: false
        default: 'linux/amd64,linux/arm64'
        type: string

jobs:
  docker-build:
    name: 构建 Docker 镜像
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      actions: write
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 生成版本信息
        run: |
          if git describe --tags --exact-match HEAD 2>/dev/null; then
            echo "VERSION=$(git describe --tags)" >> $GITHUB_ENV
          else
            echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          fi
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      - name: 设置 QEMU（用于交叉编译）
        uses: docker/setup-qemu-action@v3

      - name: 设置 Docker Buildx（启用多平台构建）
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: 登录到 GitHub Container Registry
        if: ${{ (inputs.registry == 'ghcr.io' || (github.event_name == 'push' && inputs.registry == null)) && (inputs.push_to_registry != false) }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 登录到 Docker Hub
        if: ${{ inputs.registry == 'docker.io' && (inputs.push_to_registry != false) }}
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 设置小写仓库所有者
        id: lowercase
        run: echo "owner=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"

      - name: 生成镜像元数据
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ inputs.registry || 'ghcr.io' }}/${{ steps.lowercase.outputs.owner }}/veloera
          tags: |
            type=raw,value=${{ inputs.tag || 'latest' }}
            type=raw,value=${{ env.VERSION }}
            type=sha,prefix={{branch}}-

      - name: 构建并推送 Docker 镜像
        uses: docker/build-push-action@v5
        with:
          context: .
          # 使用 amd64 runner 通过 QEMU 交叉编译，比原生 arm64 runner 更快
          platforms: ${{ inputs.platforms || 'linux/amd64,linux/arm64' }}
          push: ${{ github.event_name == 'push' || inputs.push_to_registry != false }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ env.VERSION }}
            BUILD_DATE=${{ env.BUILD_DATE }}
            BUILDKIT_INLINE_CACHE=1
          # 使用 GitHub Actions cache 提升构建速度
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 构建结果摘要
        run: |
          echo "## Docker 构建完成 🚀" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**构建信息:**" >> $GITHUB_STEP_SUMMARY
          echo "- 版本: \`${{ env.VERSION }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- 标签: \`${{ inputs.tag || 'latest' }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- 仓库: \`${{ inputs.registry || 'ghcr.io' }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- 平台: \`${{ inputs.platforms || 'linux/amd64,linux/arm64' }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- 推送: \`${{ inputs.push_to_registry || inputs.push_to_registry == null }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**镜像标签:**" >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.meta.outputs.tags }}' | sed 's/^/- `/' | sed 's/$/`/' >> $GITHUB_STEP_SUMMARY